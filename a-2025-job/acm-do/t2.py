'''

双十一来临，小王想在某个购物平台买坚果。在输入坚果时，页面默认按照综合推荐排 序列举，小王很想知道平台如何完成的，于是便开始思考算法。经过一番操作后，完成 了他的多个关键字排序算法；希望你能给小王提供一份正确的排序结果，验证其实现算
法结果的准确性。

）输入描述 第一行两个整数n,m（m<=10,n<=100000），分别表示有n个需要排序的商品，每个
商品有m个属性。 第二行m个整数（均为1或-1），每个整数i表示第i个属性按降序（1）或是升序排列
（-1），依次按照属性1~m排序。
接下来n行，每行m个整数，表示每个商品的m个压性。

丿输出描述
输出排序后的结果。

补充说明
示例：
43
1 -1 11
222
233
444
445
输出：
445
444
222
233
说明：商品评价属性相同时，校照下个属性维度排序
）示例1
输入
43
1-11
222
233
444


'''

# ---------- 题目2：按列权重的多关键字排序（降序） ----------
# 功能概述：
#   给定 n 行 m 列的矩阵 l（每行是一个长度为 m 的列表），以及权重向量 a（长度m）；
#   将行按每列元素与对应权重乘积的“多关键字”（先按第0列权重值降序，再按第1列，...）排序并输出。
#
# 说明：
#   - 我们用 key 返回一个元组 ( -x[0]*a[0], -x[1]*a[1], ..., -x[m-1]*a[m-1] )
#     这样 Python 默认的升序排序就会按每列的加权值进行降序排序（字典序比较）。
#   - 若你想按“加权和”排序，可以使用 -sum(x[i]*a[i] for i in range(m)) 作为 key。
#
# 复杂度：排序 O(n * m * log n)，内存 O(n * m)

n, m = map(int, input().split())            # 读入 n, m
a = [int(i) for i in input().split()]       # 读入权重向量 a，长度应为 m

# 读入 n 行，每行 m 个整数
l = [[int(i) for i in input().split()] for _ in range(n)]

# 多关键字降序：构造元组 key，元组按字典序比较；在元组中用负号实现降序效果
# 注意：用 tuple(...) 将生成器转换为元组（不能直接传生成器）
l.sort(key=lambda row: tuple(-row[i] * a[i] for i in range(m)))

# 输出每行
for row in l:
    print(' '.join(map(str, row)))
# 第2题，如果面试官问该题的解题思路可说明：
# 我的思路是做多关键字排序：把每行按列依次比较，列方向由输入的 1/−1 决定，我把每列值乘以方向再取相反数，构成一个键元组，用 Python 的排序按字典序一次性排好；这里用到的是自定义排序键 + 字典序比较的算法思想



